@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@model Abyssal_Events.Models.ViewModel.AddEventPostRequest
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
	<div class="container">
		<h1>Create a New Event</h1>
	</div>
</div>

<div class="container py-5">
	<form method="post">
		<div class="mb-3">
			<label class="form-label">Title</label>
			<input type="text" class="form-control" id="title" asp-for="Title" required />
		</div>
		<div class="mb-3">
			<label class="form-label">Description</label>
			<input type="text" class="form-control" id="description" asp-for="Description" required />
		</div>
		<div class="mb-3">
			<label class="form-label">Content</label>
			<textarea class="form-control" id="content" asp-for="Content" required></textarea>
		</div>
		<div class="mb-3">
			<label class="form-label">Image</label>
			<input type="file" class="form-control" id="image" />
			<img class="mt-2" src="" id="imageDisplay" style="display:none; width:300px" />
			<input type="hidden" class="form-control" id="imageUrl" asp-for="FeaturedImage" />
		</div>
		<div class="mb-3">
			<label class="form-label">Date</label>
			<input type="date" class="form-control" id="date" asp-for="Date" value="" required />
		</div>
		<div class="mb-3">
			<label class="form-label">Place</label>
			<input type="text" class="form-control" id="place" asp-for="Place" value="" required />
		</div>
		<div class="mb-3">
			<label class="form-label">Organizer</label>
			<input type="text" class="form-control" id="organizer" value="@userManager.GetUserName(User).ToString()" asp-for="Organizer" readonly />
		</div>
		<div class="mb-3">
			<label class="form-label">Category</label>
			<select class="form-select" asp-items="@Model.Categories" asp-for="SelectedCategory"></select>
		</div>
		<div class="mb-3">
			<button type="submit" class="btn btn-dark">
				Create an Event
			</button>
		</div>
	</form>
</div>

@section Scripts {
	<script>
		var editor = new FroalaEditor('#content', {
			image: '/api/images'
		});

		const imageElement = document.getElementById('image');
		const imageUrlElement = document.getElementById('imageUrl');
		const imageDisplayElement = document.getElementById('imageDisplay');

		async function UploadImage(e) {
			let data = new FormData();
			data.append('formFile', e.target.files[0]);

			const res = await fetch('/api/images', {
				method: 'POST',
				headers: {
					'Accept': '*/*'
				},
				body: data
			});
			const resData = await res.json();

			imageUrlElement.value = resData.link;
			imageDisplayElement.src = resData.link;
			imageDisplayElement.style.display = 'block';
		};

		imageElement.addEventListener('change', UploadImage);
	</script>
}